local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("Jailbird UI", "DarkTheme")

local Players = game:FindService("Players")
local CoreGui = game:FindService("CoreGui")
local RunService = game:FindService("RunService")
local lp = Players.LocalPlayer

-- Chams Setup
local Storage = Instance.new("Folder")
Storage.Parent = CoreGui
Storage.Name = "Highlight_Storage"
local connections = {}
local chamsEnabled = false
local heartbeatEnabled = false

local function Highlight(plr)
    if plr == lp or (plr.Team and lp.Team and plr.Team == lp.Team) then return end
    local Highlight = Instance.new("Highlight")
    Highlight.Name = plr.Name
    Highlight.FillColor = Color3.fromRGB(175, 25, 255)
    Highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    Highlight.FillTransparency = 0.5
    Highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
    Highlight.OutlineTransparency = 0
    Highlight.Parent = Storage
    local plrchar = plr.Character
    if plrchar then Highlight.Adornee = plrchar end
    connections[plr] = plr.CharacterAdded:Connect(function(char)
        Highlight.Adornee = chamsEnabled and char or nil
    end)
end

local function ToggleChams(state)
    chamsEnabled = state
    for _, plr in next, Players:GetPlayers() do
        if plr ~= lp and (not plr.Team or not lp.Team or plr.Team ~= lp.Team) then
            local highlight = Storage:FindFirstChild(plr.Name)
            if highlight then
                highlight.Adornee = state and plr.Character or nil
            elseif state then
                Highlight(plr)
            end
        end
    end
end

RunService.Heartbeat:Connect(function()
    if chamsEnabled and heartbeatEnabled then
        local pulse = math.sin(tick() * 2) * 0.2 + 0.5
        for _, highlight in next, Storage:GetChildren() do
            highlight.FillTransparency = pulse
        end
    end
end)

Players.PlayerAdded:Connect(function(plr)
    if chamsEnabled then Highlight(plr) end
end)
for _, v in next, Players:GetPlayers() do
    if chamsEnabled then Highlight(v) end
end
Players.PlayerRemoving:Connect(function(plr)
    if Storage[plr.Name] then Storage[plr.Name]:Destroy() end
    if connections[plr] then connections[plr]:Disconnect() end
end)

-- Aimbot Setup
local aimbotLoaded = false
local aimbotScript = loadstring(game:HttpGet("https://raw.githubusercontent.com/ttwizz/Open-Aimbot/master/source.lua", true))
local function ToggleAimbot(state)
    if not aimbotLoaded and state then
        aimbotScript()
        aimbotLoaded = true
    end
    getgenv().AimbotEnabled = state
end

-- UI Tabs
local VisualsTab = Window:NewTab("Visuals")
local CombatTab = Window:NewTab("Combat")

-- Visuals Section
local VisualsSection = VisualsTab:NewSection("Chams Settings")
VisualsSection:NewToggle("Enable Chams", "Toggles Chams visibility", function(state)
    ToggleChams(state)
end)
VisualsSection:NewToggle("Heartbeat Effect", "Toggles pulsing effect", function(state)
    heartbeatEnabled = state
end)
VisualsSection:NewColorPicker("Fill Color", "Change Chams fill color", Color3.fromRGB(175, 25, 255), function(color)
    for _, highlight in next, Storage:GetChildren() do
        highlight.FillColor = color
    end
end)
VisualsSection:NewColorPicker("Outline Color", "Change Chams outline color", Color3.fromRGB(255, 255, 255), function(color)
    for _, highlight in next, Storage:GetChildren() do
        highlight.OutlineColor = color
    end
end)
VisualsSection:NewSlider("Fill Transparency", "Adjust fill transparency", 100, 0, 50, function(value)
    if not heartbeatEnabled then
        for _, highlight in next, Storage:GetChildren() do
            highlight.FillTransparency = value / 100
        end
    end
end)
VisualsSection:NewSlider("Outline Transparency", "Adjust outline transparency", 100, 0, 0, function(value)
    for _, highlight in next, Storage:GetChildren() do
        highlight.OutlineTransparency = value / 100
    end
end)

-- Combat Section
local CombatSection = CombatTab:NewSection("Aimbot Settings")
CombatSection:NewToggle("Enable Aimbot", "Toggles Aimbot on/off", function(state)
    ToggleAimbot(state)
end)
CombatSection:NewKeybind("Aimbot Key", "Set Aimbot trigger key", Enum.KeyCode.E, function(key)
    getgenv().AimbotKey = key
end)
CombatSection:NewDropdown("Target Part", "Select aim target", {"Head", "Torso"}, function(part)
    getgenv().AimbotTargetPart = part == "Head" and "Head" or "HumanoidRootPart"
end)
CombatSection:NewSlider("Smoothing", "Adjust Aimbot smoothing (0-1)", 1000, 0, 500, function(value)
    getgenv().AimbotSmoothness = value / 1000
end)
CombatSection:NewSlider("Sensitivity", "Adjust Aimbot sensitivity", 5, 0, 2, function(value)
    getgenv().AimbotSensitivity = value
end)

-- UI Toggle with Right Shift
Window:NewKeybind("Toggle UI", "Show/hide UI with Right Shift", Enum.KeyCode.RightShift, function()
    Library:ToggleUI()
end)
